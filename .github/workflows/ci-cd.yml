---
name: "CI/CD - Test and Release"

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types:
      - closed

env:
  NPM_MODULE_NAME: "@johnqh/types"

jobs:
  test:
    name: "Run Tests"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node:
          - "20.x"
          - "22.x"
    steps:
      - uses: actions/checkout@v4

      - name: "Use Node.js ${{ matrix.node }}"
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}

      - name: "Install dependencies"
        run: npm ci

      - name: "Run type checking"
        run: npm run typecheck

      - name: "Run linting"
        run: npm run lint

      - name: "Run tests"
        run: npm test

      - name: "Build project"
        run: npm run build

  check_for_release:
    runs-on: ubuntu-latest
    outputs:
      should_release: ${{ steps.check.outputs.should_release }}
      version: ${{ steps.check.outputs.version }}
      version_tag: ${{ steps.check.outputs.version_tag }}
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: "Check if should trigger release"
        id: check
        run: |
          # Skip only if explicitly marked with [skip ci] or [skip-ci]
          COMMIT_MSG=$(git log -1 --pretty=%s)
          echo "Commit message: $COMMIT_MSG"
          
          # Skip release only for PR events that weren't merged
          if [[ "${{ github.event_name }}" == "pull_request" ]] && [[ "${{ github.event.action }}" != "closed" || "${{ github.event.pull_request.merged }}" != "true" ]]; then
            echo "should_release=false" >> $GITHUB_OUTPUT
            echo "PR not merged, skipping release"
            exit 0
          fi
          
          # Skip only if explicitly marked to skip CI
          if [[ "$COMMIT_MSG" == *"[skip ci]"* ]] || [[ "$COMMIT_MSG" == *"[skip-ci]"* ]]; then
            echo "should_release=false" >> $GITHUB_OUTPUT
            echo "Commit marked to skip CI: $COMMIT_MSG"
          else
            echo "should_release=true" >> $GITHUB_OUTPUT
            
            # Get current version from package.json
            CURRENT_VERSION=$(node -p "require('./package.json').version")
            
            echo "version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
            echo "version_tag=v$CURRENT_VERSION" >> $GITHUB_OUTPUT
            echo "Will release version: $CURRENT_VERSION for commit: $COMMIT_MSG"
          fi

  release_npm:
    needs:
      - test
      - check_for_release
    if: ${{ needs.check_for_release.outputs.should_release == 'true' }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "Setup Node.js"
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          registry-url: "https://registry.npmjs.org"

      - name: "Verify package version"
        run: |
          echo "Using version: ${{ needs.check_for_release.outputs.version }}"
          echo "Package.json version: $(node -p "require('./package.json').version")"

      - name: "Install dependencies"
        run: npm ci

      - name: "Run tests"
        run: npm test

      - name: "Build project"
        run: npm run build

      - name: "Verify build output"
        run: |
          echo "Build output contents:"
          ls -la dist/
          echo "Main export file:"
          head -10 dist/index.js
          echo "Type definitions:"
          head -10 dist/index.d.ts

      - name: "Create GitHub Release"
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.check_for_release.outputs.version_tag }}
          name: "Release ${{ needs.check_for_release.outputs.version }}"
          body: |
            ## Common TypeScript Types v${{ needs.check_for_release.outputs.version }}
            
            This library provides common TypeScript types, interfaces, and enums for 0xmail.box projects.
            
            ### Features
            - üéØ Fully typed TypeScript interfaces and enums
            - üì± Common types for web3 and blockchain applications
            - üîß Utility types and helper interfaces
            - üèóÔ∏è Modular exports for selective imports
            - üì¶ Zero runtime dependencies
            
            ### Installation
            ```bash
            npm install @johnqh/types@${{ needs.check_for_release.outputs.version }}
            ```
            
            ### What's Included
            - Common TypeScript types and interfaces
            - Web3 and blockchain-related enums
            - Utility types for 0xmail.box ecosystem
            - Type definitions for common patterns
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: "Publish to NPM"
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: "Notify deployment success"
        if: success()
        run: |
          echo "üöÄ Release ${{ needs.check_for_release.outputs.version }} deployed successfully!"
          echo "‚Ä¢ NPM: https://www.npmjs.com/package/@johnqh/types/v/${{ needs.check_for_release.outputs.version }}"
          echo "‚Ä¢ GitHub: https://github.com/${{ github.repository }}/releases/tag/${{ needs.check_for_release.outputs.version_tag }}"
          echo "‚Ä¢ Documentation: https://github.com/${{ github.repository }}#readme"

      - name: "Notify deployment failure"
        if: failure()
        run: |
          echo "‚ùå Release deployment FAILED for commit ${{ github.sha }}"
          echo "Check: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"